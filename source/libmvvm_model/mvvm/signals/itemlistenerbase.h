// ************************************************************************** //
//
//  Model-view-view-model framework for large GUI applications
//
//! @license   GNU General Public License v3 or higher (see COPYING)
//! @authors   see AUTHORS
//
// ************************************************************************** //

#ifndef MVVM_SIGNALS_ITEMLISTENERBASE_H
#define MVVM_SIGNALS_ITEMLISTENERBASE_H

#include <mvvm/core/export.h>

namespace ModelView
{

class SessionItem;

//! Provides sets of methods to subscribe to various signals generated by SessionItem.
//! Automatically tracks the time of life of SessionItem. Unsubscribes from the item on
//! own destruction. Used to implement user actions on item change.

CORE_EXPORT class ItemListenerBase
{
public:
    explicit ItemListenerBase(SessionItem* item = nullptr);
    virtual ~ItemListenerBase();

    void setItem(SessionItem* item);

protected:
    virtual void subscribe() {}
    virtual void unsubscribe() {}
    SessionItem* item() const;

private:
    void unsubscribe_from_current();
    SessionItem* m_item{nullptr};
};

} // namespace ModelView

#endif // MVVM_SIGNALS_ITEMLISTENERBASE_H
