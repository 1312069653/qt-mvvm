set(library_name mvvm)

target_sources(${library_name} PRIVATE
    callbackcontainer.h
    comboproperty.cpp
    comboproperty.h
    comparators.cpp
    comparators.h
    compounditem.cpp
    compounditem.h
    customvariants.cpp
    customvariants.h
    datarole.cpp
    datarole.h
    externalproperty.cpp
    externalproperty.h
    groupitem.cpp
    groupitem.h
    itemcatalogue.cpp
    itemcatalogue.h
    itemfactory.cpp
    itemfactory.h
    itemfactoryinterface.h
    itemmanager.cpp
    itemmanager.h
    itemmapper.cpp
    itemmapper.h
    itempool.cpp
    itempool.h
    itemutils.cpp
    itemutils.h
    modelmapper.cpp
    modelmapper.h
    modelutils.cpp
    modelutils.h
    mvvm_export.h
    mvvm_types.h
    path.cpp
    path.h
    propertyitem.cpp
    propertyitem.h
    sessionitemcontainer.cpp
    sessionitemcontainer.h
    sessionitem.cpp
    sessionitemdata.cpp
    sessionitemdata.h
    sessionitem.h
    sessionitem_p.cpp
    sessionitem_p.h
    sessionitemtags.cpp
    sessionitemtags.h
    sessionmodel.cpp
    sessionmodel.h
    taginfo.cpp
    taginfo.h
    uniqueidgenerator.cpp
    uniqueidgenerator.h
    variant-constants.h)

target_include_directories(${library_name}
    PUBLIC
        $<INSTALL_INTERFACE:public>
        $<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}>
)
